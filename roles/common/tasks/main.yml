- name: Verify Raspberry Pi OS
  shell: |
    if [ -f /etc/rpi-issue ]; then
      echo "Raspberry Pi OS detected"
    else
      echo "WARNING: This playbook is designed for Raspberry Pi OS only!"
      exit 1
    fi
  register: os_check
  changed_when: false

- name: Display OS verification
  debug:
    msg: "{{ os_check.stdout }}"

- name: Update package list
  apt:
    update_cache: yes

- name: Upgrade packages
  apt:
    upgrade: safe

- name: Install pip and venv
  apt:
    name:
      - python3-pip
      - python3-venv
    state: present

- name: Install SDL2 packages for pygame
  apt:
    name:
      - libsdl2-2.0-0
      - libsdl2-dev
    state: present

- name: Install Chromium browser
  apt:
    name: chromium-browser
    state: present

- name: Install ChromeDriver
  apt:
    name: chromium-chromedriver
    state: present


- name: Configure Raspberry Pi for hardware display output
  block:
    - name: Add user to video and render groups for GPU access
      user:
        name: "{{ service_user }}"
        groups: video,render
        append: yes
    
    - name: Check framebuffer devices status
      shell: |
        echo "Framebuffer devices:"
        ls -la /dev/fb* 2>/dev/null || echo "No framebuffer devices found"
        
        echo "Video devices:"
        ls -la /dev/video* 2>/dev/null || echo "No video devices found"
      register: fb_status
      changed_when: false
    
    - name: Display framebuffer status
      debug:
        var: fb_status.stdout_lines

- name: Create virtual environment directory
  file:
    path: /opt/slideshow
    state: directory
    mode: 0755

- name: Create Python virtual environment
  command: python3 -m venv {{ venv_path }}
  args:
    creates: "{{ venv_path }}/bin/python"

- name: Install Python libraries in virtual environment (except pygame)
  pip:
    name:
      - requests
      - opencv-python
      - numpy
      - selenium
      - Pillow
      - urllib3
    virtualenv: "{{ venv_path }}"

- name: Install pygame for Raspberry Pi OS
  pip:
    name: pygame
    virtualenv: "{{ venv_path }}"

- name: Verify pygame installation
  shell: "{{ venv_path }}/bin/python -c 'import pygame; print(f\"Pygame {pygame.version.ver} installed successfully\")'"
  register: pygame_verify
  changed_when: false

- name: Display pygame installation result
  debug:
    msg: "{{ pygame_verify.stdout }}"