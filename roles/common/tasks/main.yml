- name: Detect operating system
  shell: |
    if [ -f /etc/rpi-issue ]; then
      echo "raspios"
    elif grep -q "Ubuntu" /etc/os-release; then
      echo "ubuntu"
    else
      echo "unknown"
    fi
  register: detected_os
  changed_when: false

- name: Set OS fact
  set_fact:
    target_os: "{{ detected_os.stdout }}"

- name: Warn about Ubuntu compatibility
  debug:
    msg: |
      WARNING: Ubuntu detected on Raspberry Pi.
      This system is designed for Raspberry Pi OS. Some features may not work:
      - HDMI power management (vcgencmd)
      - Boot configuration (/boot/config.txt)
      Consider switching to Raspberry Pi OS for full functionality.
  when: target_os == "ubuntu"

- name: Update package list
  apt:
    update_cache: yes

- name: Upgrade packages
  apt:
    upgrade: safe

- name: Install pip and venv
  apt:
    name:
      - python3-pip
      - python3-venv
    state: present

- name: Install Chromium browser
  apt:
    name: chromium-browser
    state: present

- name: Install ChromeDriver
  apt:
    name: chromium-chromedriver
    state: present

- name: Install OpenGL libraries for OpenCV (Ubuntu)
  apt:
    name:
      - libgl1
      - libglx-mesa0
      - libglib2.0-0
    state: present
  when: target_os == "ubuntu"

- name: Install display drivers and tools (Ubuntu)
  apt:
    name:
      - libdrm2
      - libgbm1
      - fbset
      - mesa-utils
      - libgl1-mesa-dri
      - libsdl2-2.0-0
      - libsdl2-dev
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-ttf-2.0-0
    state: present
    update_cache: yes
  when: target_os == "ubuntu"

- name: Install DirectFB (Ubuntu - optional)
  apt:
    name: libdirectfb-1.7-7
    state: present
  when: target_os == "ubuntu"
  ignore_errors: yes

- name: Configure Ubuntu for hardware display output
  block:
    - name: Ensure video group exists
      group:
        name: video
        state: present
    
    - name: Add user to video and render groups for GPU access
      user:
        name: "{{ service_user }}"
        groups: video,render
        append: yes
    
    - name: Create DRM device directory if missing
      file:
        path: /dev/dri
        state: directory
        mode: '0755'
    
    - name: Check and load DRM modules
      shell: |
        # Load DRM modules if not already loaded
        modprobe drm 2>/dev/null || true
        modprobe vc4 2>/dev/null || true
        modprobe drm_kms_helper 2>/dev/null || true
        
        # Show loaded modules
        echo "Loaded DRM modules:"
        lsmod | grep -E "(drm|vc4)" || echo "No DRM modules found"
        
        # Show DRM devices
        echo "DRM devices:"
        ls -la /dev/dri/ 2>/dev/null || echo "No /dev/dri directory"
        
        # Show framebuffer devices
        echo "Framebuffer devices:"
        ls -la /dev/fb* 2>/dev/null || echo "No framebuffer devices"
      register: drm_status
      changed_when: false
    
    - name: Display DRM and framebuffer status
      debug:
        var: drm_status.stdout_lines
  when: target_os == "ubuntu"

- name: Create virtual environment directory
  file:
    path: /opt/slideshow
    state: directory
    mode: 0755

- name: Create Python virtual environment
  command: python3 -m venv {{ venv_path }}
  args:
    creates: "{{ venv_path }}/bin/python"

- name: Install Python libraries in virtual environment (except pygame)
  pip:
    name:
      - requests
      - opencv-python
      - numpy
      - selenium
      - Pillow
      - urllib3
    virtualenv: "{{ venv_path }}"

- name: Rebuild pygame with proper SDL2 support (Ubuntu)
  block:
    - name: Uninstall existing pygame
      pip:
        name: pygame
        state: absent
        virtualenv: "{{ venv_path }}"
      ignore_errors: yes
    
    - name: Install pygame with proper SDL2 libraries
      pip:
        name: pygame
        virtualenv: "{{ venv_path }}"
        extra_args: "--force-reinstall --no-cache-dir"
  when: target_os == "ubuntu"

- name: Install pygame normally for Raspberry Pi OS
  pip:
    name: pygame
    virtualenv: "{{ venv_path }}"
  when: target_os == "raspios"